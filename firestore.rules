
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // The 'ashwani' document is a container, no direct access needed.
    match /ashwani/{data} {
      allow read, write: if false;
      
      // Rules for OTPs - Allow anyone to create, as it's a pre-auth step.
      // Verification logic on the server needs read access.
      match /otps/{otpId} {
        allow create: if true;
        allow read: if true; // Allow server-side verification
        allow write: if false; // Prevent modification
      }

      // Rules for Patients
      // A patient can read/update their own data.
      // A patient can create their own account (registration).
      match /patients/{userId} {
        allow read, update: if request.auth != null && request.auth.uid == userId;
        allow create: if request.auth != null;
        // Admins can manage all patient records
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
        
        // Patients can manage their own notifications
         match /notifications/{notificationId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }
      
      // Rules for Staff and Admins
      // Authenticated users can read staff list (e.g., to assign appointments)
      // Only admins can create, update, or delete staff members.
      match /staff/{staffId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
        
        // Staff/Admins can manage their own notifications
        match /notifications/{notificationId} {
          allow read, write: if request.auth != null && request.auth.uid == staffId;
        }
      }

      // Rules for Phlebotomists
      // Phlebos can read their own profile. Admins can manage all.
      match /phlebos/{phleboId} {
        allow read: if request.auth != null && request.auth.uid == phleboId;
        allow write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
         
        // Phlebos can manage their own notifications
        match /notifications/{notificationId} {
          allow read, write: if request.auth != null && request.auth.uid == phleboId;
        }
      }
      
      // Rules for Appointments
      // Patients can read appointments where they are the patient.
      // Staff/Admins can read/write all appointments.
      // Phlebos can read appointments assigned to them.
      match /appointments/{appointmentId} {
        allow read: if request.auth != null && 
                     (resource.data.patientId == request.auth.uid || 
                      resource.data.phleboId == request.auth.uid ||
                      get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role in ['staff', 'admin']);
        allow write: if request.auth != null && 
                      get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role in ['staff', 'admin'];
        // Patients can create appointments for themselves
        allow create: if request.auth != null && request.resource.data.patientId == request.auth.uid;
        // Staff can create appointments for any patient
        allow create: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role in ['staff', 'admin'];
      }
      
      // Rules for Tests
      // All authenticated users can read the list of tests
      match /tests/{testId} {
        allow read: if request.auth != null;
        // Only admins can modify the test list
        allow write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
      }

      // Rules for History Logs - only Admins can view
      match /history_logs/{logId} {
          allow read: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
          // Writes are handled by server-side logic (actions)
          allow write: if true; // More secure would be to lock down to a service account
      }
      
      // Rules for Chatbot Training Knowledge Base - Admin only
      match /knowledge_base/{kbId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
      }

      // Rules for Reviews
      // Patients can create reviews. Admins can read all reviews.
      match /reviews/{reviewId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
      }

      // Rules for Attendance
      // Staff/Phlebos can create their own attendance records. Admins can read all.
      match /attendance/{attendanceId} {
        allow create: if request.auth != null && request.resource.data.staffId == request.auth.uid;
        allow read: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
      }
      
      // Rules for config documents like location - admin only
      match /config/{docId} {
         allow read, write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
      }
      
       // Rules for report formats
      match /report_formats/{formatId} {
         allow read, write: if request.auth != null && get(/databases/$(database)/documents/ashwani/data/staff/$(request.auth.uid)).data.role == 'admin';
      }

    }
  }
}
